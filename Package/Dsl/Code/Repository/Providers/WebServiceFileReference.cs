//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.42.
// 
#pragma warning disable 1591

namespace DSLFactory.Candle.SystemModel.WSReferentiel
{
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using DSLFactory.Candle.SystemModel.Repository;


    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "RepositoryFileServiceSoap", Namespace = "http://www.DSLFactory.org/Candle")]
    public partial class RepositoryFileService : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback CreateDomainPathOperationCompleted;

        private System.Threading.SendOrPostCallback RemoveDomainPathOperationCompleted;

        private System.Threading.SendOrPostCallback GetVersionOperationCompleted;

        private System.Threading.SendOrPostCallback GetMetadataOperationCompleted;

        private System.Threading.SendOrPostCallback GetAllMetadataOperationCompleted;

        private System.Threading.SendOrPostCallback EnumerateCategoryOperationCompleted;

        private bool useDefaultCredentialsSetExplicitly;

        /// <remarks/>
        public RepositoryFileService()
        {
        }

        public new string Url
        {
            get
            {
                return base.Url;
            }
            set
            {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true)
                            && (this.useDefaultCredentialsSetExplicitly == false))
                            && (this.IsLocalFileSystemWebService(value) == false)))
                {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }

        public new bool UseDefaultCredentials
        {
            get
            {
                return base.UseDefaultCredentials;
            }
            set
            {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }

        /// <remarks/>
        public event CreateDomainPathCompletedEventHandler CreateDomainPathCompleted;

        /// <remarks/>
        public event RemoveDomainPathCompletedEventHandler RemoveDomainPathCompleted;

        /// <remarks/>
        public event GetVersionCompletedEventHandler GetVersionCompleted;

        /// <remarks/>
        public event GetMetadataCompletedEventHandler GetMetadataCompleted;

        /// <remarks/>
        public event GetAllMetadataCompletedEventHandler GetAllMetadataCompleted;

        /// <remarks/>
        public event EnumerateCategoryCompletedEventHandler EnumerateCategoryCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.DSLFactory.org/Candle/CreateDomainPath", RequestNamespace = "http://www.DSLFactory.org/Candle", ResponseNamespace = "http://www.DSLFactory.org/Candle", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateDomainPath(string path)
        {
            this.Invoke("CreateDomainPath", new object[] {
                        path});
        }

        /// <remarks/>
        public void CreateDomainPathAsync(string path)
        {
            this.CreateDomainPathAsync(path, null);
        }

        /// <remarks/>
        public void CreateDomainPathAsync(string path, object userState)
        {
            if ((this.CreateDomainPathOperationCompleted == null))
            {
                this.CreateDomainPathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateDomainPathOperationCompleted);
            }
            this.InvokeAsync("CreateDomainPath", new object[] {
                        path}, this.CreateDomainPathOperationCompleted, userState);
        }

        private void OnCreateDomainPathOperationCompleted(object arg)
        {
            if ((this.CreateDomainPathCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateDomainPathCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.DSLFactory.org/Candle/RemoveDomainPath", RequestNamespace = "http://www.DSLFactory.org/Candle", ResponseNamespace = "http://www.DSLFactory.org/Candle", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveDomainPath(string path)
        {
            this.Invoke("RemoveDomainPath", new object[] {
                        path});
        }

        /// <remarks/>
        public void RemoveDomainPathAsync(string path)
        {
            this.RemoveDomainPathAsync(path, null);
        }

        /// <remarks/>
        public void RemoveDomainPathAsync(string path, object userState)
        {
            if ((this.RemoveDomainPathOperationCompleted == null))
            {
                this.RemoveDomainPathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveDomainPathOperationCompleted);
            }
            this.InvokeAsync("RemoveDomainPath", new object[] {
                        path}, this.RemoveDomainPathOperationCompleted, userState);
        }

        private void OnRemoveDomainPathOperationCompleted(object arg)
        {
            if ((this.RemoveDomainPathCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveDomainPathCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.DSLFactory.org/Candle/GetVersion", RequestNamespace = "http://www.DSLFactory.org/Candle", ResponseNamespace = "http://www.DSLFactory.org/Candle", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Version GetVersion()
        {
            object[] results = this.Invoke("GetVersion", new object[0]);
            return ((Version)(results[0]));
        }

        /// <remarks/>
        public void GetVersionAsync()
        {
            this.GetVersionAsync(null);
        }

        /// <remarks/>
        public void GetVersionAsync(object userState)
        {
            if ((this.GetVersionOperationCompleted == null))
            {
                this.GetVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVersionOperationCompleted);
            }
            this.InvokeAsync("GetVersion", new object[0], this.GetVersionOperationCompleted, userState);
        }

        private void OnGetVersionOperationCompleted(object arg)
        {
            if ((this.GetVersionCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVersionCompleted(this, new GetVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.DSLFactory.org/Candle/GetMetadata", RequestNamespace = "http://www.DSLFactory.org/Candle", ResponseNamespace = "http://www.DSLFactory.org/Candle", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ComponentModelMetadata GetMetadata(System.Guid modelId, VersionInfo version)
        {
            object[] results = this.Invoke("GetMetadata", new object[] {
                        modelId,
                        version});
            return ((ComponentModelMetadata)(results[0]));
        }

        /// <remarks/>
        public void GetMetadataAsync(System.Guid modelId, VersionInfo version)
        {
            this.GetMetadataAsync(modelId, version, null);
        }

        /// <remarks/>
        public void GetMetadataAsync(System.Guid modelId, VersionInfo version, object userState)
        {
            if ((this.GetMetadataOperationCompleted == null))
            {
                this.GetMetadataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMetadataOperationCompleted);
            }
            this.InvokeAsync("GetMetadata", new object[] {
                        modelId,
                        version}, this.GetMetadataOperationCompleted, userState);
        }

        private void OnGetMetadataOperationCompleted(object arg)
        {
            if ((this.GetMetadataCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMetadataCompleted(this, new GetMetadataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.DSLFactory.org/Candle/GetAllMetadata", RequestNamespace = "http://www.DSLFactory.org/Candle", ResponseNamespace = "http://www.DSLFactory.org/Candle", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ComponentModelMetadata[] GetAllMetadata()
        {
            object[] results = this.Invoke("GetAllMetadata", new object[0]);
            return ((ComponentModelMetadata[])(results[0]));
        }

        /// <remarks/>
        public void GetAllMetadataAsync()
        {
            this.GetAllMetadataAsync(null);
        }

        /// <remarks/>
        public void GetAllMetadataAsync(object userState)
        {
            if ((this.GetAllMetadataOperationCompleted == null))
            {
                this.GetAllMetadataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllMetadataOperationCompleted);
            }
            this.InvokeAsync("GetAllMetadata", new object[0], this.GetAllMetadataOperationCompleted, userState);
        }

        private void OnGetAllMetadataOperationCompleted(object arg)
        {
            if ((this.GetAllMetadataCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllMetadataCompleted(this, new GetAllMetadataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

   
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.DSLFactory.org/Candle/EnumerateCategory", RequestNamespace = "http://www.DSLFactory.org/Candle", ResponseNamespace = "http://www.DSLFactory.org/Candle", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RepositoryFileInfo[] EnumerateCategory(RepositoryCategory category, string filter, bool recursive)
        {
            object[] results = this.Invoke("EnumerateCategory", new object[] {
                        category,
                        filter,
                        recursive});
            return ((RepositoryFileInfo[])(results[0]));
        }

        /// <remarks/>
        public void EnumerateCategoryAsync(RepositoryCategory category, string filter, bool recursive)
        {
            this.EnumerateCategoryAsync(category, filter, recursive, null);
        }

        /// <remarks/>
        public void EnumerateCategoryAsync(RepositoryCategory category, string filter, bool recursive, object userState)
        {
            if ((this.EnumerateCategoryOperationCompleted == null))
            {
                this.EnumerateCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnumerateCategoryOperationCompleted);
            }
            this.InvokeAsync("EnumerateCategory", new object[] {
                        category,
                        filter,
                        recursive}, this.EnumerateCategoryOperationCompleted, userState);
        }

        private void OnEnumerateCategoryOperationCompleted(object arg)
        {
            if ((this.EnumerateCategoryCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnumerateCategoryCompleted(this, new EnumerateCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }

        private bool IsLocalFileSystemWebService(string url)
        {
            if (((url == null)
                        || (url == string.Empty)))
            {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024)
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0)))
            {
                return true;
            }
            return false;
        }
    }


    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void CreateDomainPathCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void RemoveDomainPathCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetVersionCompletedEventHandler(object sender, GetVersionCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public Version Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((Version)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetMetadataCompletedEventHandler(object sender, GetMetadataCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMetadataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetMetadataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public ComponentModelMetadata Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((ComponentModelMetadata)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetAllMetadataCompletedEventHandler(object sender, GetAllMetadataCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllMetadataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetAllMetadataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public ComponentModelMetadata[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((ComponentModelMetadata[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void EnumerateCategoryCompletedEventHandler(object sender, EnumerateCategoryCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnumerateCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal EnumerateCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public RepositoryFileInfo[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((RepositoryFileInfo[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591