//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using DslModeling=Microsoft.VisualStudio.Modeling;
using DslDesign=Microsoft.VisualStudio.Modeling.Design;
using DslDiagrams=Microsoft.VisualStudio.Modeling.Diagrams;
using System.Collections.Generic;

namespace DSLFactory.Candle.SystemModel
{
    /// <summary>
    /// Helper class used to create and initialize toolbox items for this DSL.
    /// </summary>
    /// <remarks>
    /// Double-derived class to allow easier code customization.
    /// </remarks>
    public partial class CandleToolboxHelper 
    {
        /// <summary>
        /// 
        /// </summary>
        public const string ToolboxModelsFilterString = "DataLayerDiagram";
        /// <summary>
        /// 
        /// </summary>
        public const string ToolboxUIFilterString = "UILayerDiagram";


        /// <summary>
        /// Returns a list of toolbox items for use with this DSL.
        /// </summary>
        /// Les items sont tous créés dans le designer et sont distingués par le nom du TabName qui correspond
        /// au diagramme associé.
        public override global::System.Collections.Generic.IList<DslDesign::ModelingToolboxItem> CreateToolboxItems()
        {
            IList<DslDesign::ModelingToolboxItem> toolboxItems = base.CreateToolboxItems();            

            // Create store and load domain models.
            using( DslModeling::Store store = new DslModeling::Store( this.ServiceProvider ) )
            {
                store.LoadDomainModels( typeof( DslDiagrams::CoreDesignSurfaceDomainModel ),
                    typeof( global::DSLFactory.Candle.SystemModel.CandleDomainModel ) );

                global::System.Resources.ResourceManager resourceManager = global::DSLFactory.Candle.SystemModel.CandleDomainModel.SingletonResourceManager;
                global::System.Globalization.CultureInfo resourceCulture = global::System.Globalization.CultureInfo.CurrentUICulture;

                // Parcours des toolbox items les associer au bon diagramme
                using( DslModeling::Transaction t = store.TransactionManager.BeginTransaction( "CreateToolboxItems for modelsLayer" ) )
                {
                    foreach( DslDesign::ModelingToolboxItem item in toolboxItems )
                    {
                        global::System.ComponentModel.ToolboxItemFilterAttribute[] filters = (global::System.ComponentModel.ToolboxItemFilterAttribute[])item.Filter;
                        if( item.TabName == "Models" )
                        {
                            filters[0] = new global::System.ComponentModel.ToolboxItemFilterAttribute( ToolboxModelsFilterString);
                        }

                        if( item.TabName == "UILayer" )
                        {
                            filters[0] = new global::System.ComponentModel.ToolboxItemFilterAttribute( ToolboxUIFilterString );
                        }
                    }                    

                    t.Rollback();
                }
            }

            return toolboxItems;
        }

    }
}
