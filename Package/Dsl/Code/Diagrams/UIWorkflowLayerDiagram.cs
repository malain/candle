//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using DslModeling=Microsoft.VisualStudio.Modeling;
using DslDesign=Microsoft.VisualStudio.Modeling.Design;
using DslDiagrams=Microsoft.VisualStudio.Modeling.Diagrams;
using Microsoft.VisualStudio.Modeling.Diagrams;
using Microsoft.VisualStudio.Modeling;
using System.Collections.Generic;

namespace DSLFactory.Candle.SystemModel
{
    /// <summary>
    /// DomainClass SystemModelDiagram
    /// Description for DSLFactory.Candle.SystemModel.SystemModelDiagram
    /// </summary>
    [global::System.CLSCompliant( true )]
    [DslModeling::DomainObjectId( "200ADCD9-43E1-4537-8533-FE43544FC910" )]
    public partial class UIWorkflowLayerDiagram : ComponentModelDiagram
    {
        
        #region Toolbox filters
        private static global::System.ComponentModel.ToolboxItemFilterAttribute[] toolboxFilters = new global::System.ComponentModel.ToolboxItemFilterAttribute[] {
                        new global::System.ComponentModel.ToolboxItemFilterAttribute(global::DSLFactory.Candle.SystemModel.CandleToolboxHelper.ToolboxUIFilterString, global::System.ComponentModel.ToolboxItemFilterType.Require) };

        /// <summary>
        /// Toolbox item filter attributes for this diagram.
        /// </summary>
        public override global::System.Collections.ICollection TargetToolboxItemFilterAttributes
        {
            get
            {
                return toolboxFilters;
            }
        }
        #endregion


        #region Shape mapping
        /// <summary>
        /// Called during view fixup to ask the parent whether a shape should be created for the given child element.
        /// </summary>
        /// <remarks>
        /// Always return true, since we assume there is only one diagram per model file for DSL scenarios.
        /// </remarks>
        protected override bool ShouldAddShapeForElement( DslModeling::ModelElement element )
        {
            return true;
        }

        #endregion

        #region Constructors, domain class Id

        /// <summary>
        /// SystemModelDiagram domain class Id.
        /// </summary>
        public static readonly new global::System.Guid DomainClassId = new System.Guid(
            0x200adcd9, 0x43e1, 0x4537, 0x85, 0x33, 0xfe, 0x43, 0x54, 0x4f, 0xc9, 0x10 );

        /// <summary>
        /// Constructor
        /// </summary>
        /// <param name="store">Store where new element is to be created.</param>
        /// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
        public UIWorkflowLayerDiagram( DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments )
            : this( store != null ? store.DefaultPartition : null, propertyAssignments )
        {
        }

        /// <summary>
        /// Constructor
        /// </summary>
        /// <param name="partition">Partition where new element is to be created.</param>
        /// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
        public UIWorkflowLayerDiagram( DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments )
            : base( partition, propertyAssignments )
        {
        }
        #endregion

        /// <summary>
        /// Gets the watermark text that is assigned to the diagram.
        /// </summary>
        /// <value></value>
        /// <returns>The watermark text that is assigned to the diagram.</returns>
        public override string WatermarkText
        {
            get
            {
                return "Drag a 'Scenario' from the toolbox";
            }
        }

    }
}

